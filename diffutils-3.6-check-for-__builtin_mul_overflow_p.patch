diff -up diffutils-3.7/configure.ac.0000~ diffutils-3.7/configure.ac
--- diffutils-3.7/configure.ac.0000~	2018-12-28 08:18:14.000000000 +0100
+++ diffutils-3.7/configure.ac	2019-01-01 15:57:33.988564298 +0100
@@ -41,6 +41,18 @@ gl_EARLY
 gl_USE_SYSTEM_EXTENSIONS
 gl_INIT
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 AC_ARG_ENABLE([gcc-warnings],
   [AS_HELP_STRING([--enable-gcc-warnings],
                   [turn on lots of GCC warnings (for developers)])],
diff -up diffutils-3.7/gnulib-tests/macros.h.0000~ diffutils-3.7/gnulib-tests/macros.h
--- diffutils-3.7/gnulib-tests/macros.h.0000~	2018-01-07 01:45:53.000000000 +0100
+++ diffutils-3.7/gnulib-tests/macros.h	2019-01-01 15:57:33.988564298 +0100
@@ -22,7 +22,7 @@
 #include <stdlib.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/fnmatch.c.0000~ diffutils-3.7/lib/fnmatch.c
--- diffutils-3.7/lib/fnmatch.c.0000~	2018-01-07 01:47:05.000000000 +0100
+++ diffutils-3.7/lib/fnmatch.c	2019-01-01 15:57:33.988564298 +0100
@@ -66,7 +66,7 @@ extern int fnmatch (const char *pattern,
 #include "flexmember.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/freopen-safer.c.0000~ diffutils-3.7/lib/freopen-safer.c
--- diffutils-3.7/lib/freopen-safer.c.0000~	2018-01-07 01:45:52.000000000 +0100
+++ diffutils-3.7/lib/freopen-safer.c	2019-01-01 15:57:33.988564298 +0100
@@ -27,7 +27,7 @@
 #include <unistd.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/intprops.h.0000~ diffutils-3.7/lib/intprops.h
--- diffutils-3.7/lib/intprops.h.0000~	2019-01-01 15:57:33.988564298 +0100
+++ diffutils-3.7/lib/intprops.h	2019-01-01 16:00:09.822134496 +0100
@@ -228,7 +228,7 @@
 #endif
 
 /* True if __builtin_add_overflow_p (A, B, C) works.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
+#define _GL_HAS_BUILTIN_OVERFLOW_P (HAVE_BUILTIN_MUL_OVERFLOW_P)
 
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
diff -up diffutils-3.7/lib/mbrtowc.c.0000~ diffutils-3.7/lib/mbrtowc.c
--- diffutils-3.7/lib/mbrtowc.c.0000~	2019-01-01 15:57:33.988564298 +0100
+++ diffutils-3.7/lib/mbrtowc.c	2019-01-01 16:00:43.903862304 +0100
@@ -36,7 +36,7 @@
 # include "verify.h"
 
 # ifndef FALLTHROUGH
-#  if __GNUC__ < 7
+#  if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #   define FALLTHROUGH ((void) 0)
 #  else
 #   define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/quotearg.c.0000~ diffutils-3.7/lib/quotearg.c
--- diffutils-3.7/lib/quotearg.c.0000~	2018-01-07 01:45:52.000000000 +0100
+++ diffutils-3.7/lib/quotearg.c	2019-01-01 15:57:33.988564298 +0100
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/unistr/u8-uctomb-aux.c.0000~ diffutils-3.7/lib/unistr/u8-uctomb-aux.c
--- diffutils-3.7/lib/unistr/u8-uctomb-aux.c.0000~	2018-01-07 01:47:07.000000000 +0100
+++ diffutils-3.7/lib/unistr/u8-uctomb-aux.c	2019-01-01 15:57:33.989564296 +0100
@@ -21,7 +21,7 @@
 #include "unistr.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/vasnprintf.c.0000~ diffutils-3.7/lib/vasnprintf.c
--- diffutils-3.7/lib/vasnprintf.c.0000~	2018-12-24 02:25:30.000000000 +0100
+++ diffutils-3.7/lib/vasnprintf.c	2019-01-01 15:57:33.989564296 +0100
@@ -119,7 +119,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -up diffutils-3.7/lib/xalloc-oversized.h.0000~ diffutils-3.7/lib/xalloc-oversized.h
--- diffutils-3.7/lib/xalloc-oversized.h.0000~	2019-01-01 15:57:33.989564296 +0100
+++ diffutils-3.7/lib/xalloc-oversized.h	2019-01-01 15:59:21.441304985 +0100
@@ -41,7 +41,7 @@ typedef size_t __xalloc_count_type;
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !defined __ICC && !__STRICT_ANSI__
diff -up diffutils-3.7/src/system.h.0000~ diffutils-3.7/src/system.h
--- diffutils-3.7/src/system.h.0000~	2018-12-31 00:38:16.000000000 +0100
+++ diffutils-3.7/src/system.h	2019-01-01 15:57:33.989564296 +0100
@@ -232,7 +232,7 @@ verify (LIN_MAX <= TYPE_MAXIMUM (printin
 #define STREQ(a, b) (strcmp (a, b) == 0)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
