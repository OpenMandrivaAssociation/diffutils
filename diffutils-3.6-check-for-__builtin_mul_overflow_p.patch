diff -Naur diffutils-3.6/configure.ac diffutils-3.6.tpg/configure.ac
--- diffutils-3.6/configure.ac	2017-01-01 12:22:36.000000000 +0100
+++ diffutils-3.6.tpg/configure.ac	2018-04-23 10:05:58.993298750 +0200
@@ -41,6 +41,18 @@
 gl_USE_SYSTEM_EXTENSIONS
 gl_INIT
 
+AC_CACHE_CHECK([for gcc 7-compatible __builtin_mul_overflow_p],
+  [utils_cv_builtin_mul_overflow_p],
+  [AC_COMPILE_IFELSE(
+    [AC_LANG_PROGRAM(
+      [[]],
+      [[return __builtin_mul_overflow_p(1, 2, 3);]])],
+    [utils_cv_builtin_mul_overflow_p=yes],
+    [utils_cv_builtin_mul_overflow_p=no])])
+if test $utils_cv_builtin_mul_overflow_p = yes; then
+  AC_DEFINE([HAVE_BUILTIN_MUL_OVERFLOW_P], [1], [Define if your compiler supports __builtin_mul_overflow_p])
+fi
+
 AC_ARG_ENABLE([gcc-warnings],
   [AS_HELP_STRING([--enable-gcc-warnings],
                   [turn on lots of GCC warnings (for developers)])],
diff -Naur diffutils-3.6/gnulib-tests/macros.h diffutils-3.6.tpg/gnulib-tests/macros.h
--- diffutils-3.6/gnulib-tests/macros.h	2017-05-18 18:23:32.000000000 +0200
+++ diffutils-3.6.tpg/gnulib-tests/macros.h	2018-04-23 10:07:53.472622761 +0200
@@ -22,7 +22,7 @@
 #include <stdlib.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/fnmatch.c diffutils-3.6.tpg/lib/fnmatch.c
--- diffutils-3.6/lib/fnmatch.c	2017-05-18 18:24:02.000000000 +0200
+++ diffutils-3.6.tpg/lib/fnmatch.c	2018-04-23 10:10:14.665021972 +0200
@@ -66,7 +66,7 @@
 #include "flexmember.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/freopen-safer.c diffutils-3.6.tpg/lib/freopen-safer.c
--- diffutils-3.6/lib/freopen-safer.c	2017-05-20 02:14:05.000000000 +0200
+++ diffutils-3.6.tpg/lib/freopen-safer.c	2018-04-23 10:10:47.916115939 +0200
@@ -27,7 +27,7 @@
 #include <unistd.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/intprops.h diffutils-3.6.tpg/lib/intprops.h
--- diffutils-3.6/lib/intprops.h	2017-05-18 18:24:03.000000000 +0200
+++ diffutils-3.6.tpg/lib/intprops.h	2018-04-23 10:06:54.116454809 +0200
@@ -221,14 +221,11 @@
 /* True if __builtin_add_overflow (A, B, P) works when P is non-null.  */
 #define _GL_HAS_BUILTIN_OVERFLOW (5 <= __GNUC__)
 
-/* True if __builtin_add_overflow_p (A, B, C) works.  */
-#define _GL_HAS_BUILTIN_OVERFLOW_P (7 <= __GNUC__)
-
 /* The _GL*_OVERFLOW macros have the same restrictions as the
    *_RANGE_OVERFLOW macros, except that they do not assume that operands
    (e.g., A and B) have the same type as MIN and MAX.  Instead, they assume
    that the result (e.g., A + B) has that type.  */
-#if _GL_HAS_BUILTIN_OVERFLOW_P
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define _GL_ADD_OVERFLOW(a, b, min, max)                               \
    __builtin_add_overflow_p (a, b, (__typeof__ ((a) + (b))) 0)
 # define _GL_SUBTRACT_OVERFLOW(a, b, min, max)                          \
diff -Naur diffutils-3.6/lib/mbrtowc.c diffutils-3.6.tpg/lib/mbrtowc.c
--- diffutils-3.6/lib/mbrtowc.c	2017-05-18 18:23:32.000000000 +0200
+++ diffutils-3.6.tpg/lib/mbrtowc.c	2018-04-23 10:08:12.536676692 +0200
@@ -36,7 +36,7 @@
 # include "verify.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/quotearg.c diffutils-3.6.tpg/lib/quotearg.c
--- diffutils-3.6/lib/quotearg.c	2017-05-20 02:14:05.000000000 +0200
+++ diffutils-3.6.tpg/lib/quotearg.c	2018-04-23 10:10:32.463072274 +0200
@@ -55,7 +55,7 @@
 #define INT_BITS (sizeof (int) * CHAR_BIT)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/strftime.c diffutils-3.6.tpg/lib/strftime.c
--- diffutils-3.6/lib/strftime.c	2017-05-18 18:24:03.000000000 +0200
+++ diffutils-3.6.tpg/lib/strftime.c	2018-04-23 10:09:46.929943589 +0200
@@ -69,7 +69,7 @@
 #include <stdbool.h>
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/unistr/u8-uctomb-aux.c diffutils-3.6.tpg/lib/unistr/u8-uctomb-aux.c
--- diffutils-3.6/lib/unistr/u8-uctomb-aux.c	2017-05-18 19:30:12.000000000 +0200
+++ diffutils-3.6.tpg/lib/unistr/u8-uctomb-aux.c	2018-04-23 10:09:21.356871299 +0200
@@ -21,7 +21,7 @@
 #include "unistr.h"
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/vasnprintf.c diffutils-3.6.tpg/lib/vasnprintf.c
--- diffutils-3.6/lib/vasnprintf.c	2017-05-18 18:24:03.000000000 +0200
+++ diffutils-3.6.tpg/lib/vasnprintf.c	2018-04-23 10:08:33.071734771 +0200
@@ -119,7 +119,7 @@
 #endif
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
diff -Naur diffutils-3.6/lib/xalloc-oversized.h diffutils-3.6.tpg/lib/xalloc-oversized.h
--- diffutils-3.6/lib/xalloc-oversized.h	2017-05-18 18:23:32.000000000 +0200
+++ diffutils-3.6.tpg/lib/xalloc-oversized.h	2018-04-23 10:07:15.449515184 +0200
@@ -41,7 +41,7 @@
    positive and N must be nonnegative.  This is a macro, not a
    function, so that it works correctly even when SIZE_MAX < N.  */
 
-#if 7 <= __GNUC__
+#ifdef HAVE_BUILTIN_MUL_OVERFLOW_P
 # define xalloc_oversized(n, s) \
    __builtin_mul_overflow_p (n, s, (__xalloc_count_type) 1)
 #elif 5 <= __GNUC__ && !__STRICT_ANSI__
diff -Naur diffutils-3.6/src/system.h diffutils-3.6.tpg/src/system.h
--- diffutils-3.6/src/system.h	2017-05-18 19:39:59.000000000 +0200
+++ diffutils-3.6.tpg/src/system.h	2018-04-23 10:11:01.006152922 +0200
@@ -232,7 +232,7 @@
 #define STREQ(a, b) (strcmp (a, b) == 0)
 
 #ifndef FALLTHROUGH
-# if __GNUC__ < 7
+# if __GNUC__ < 7 || !__has_attribute(__fallthrough__)
 #  define FALLTHROUGH ((void) 0)
 # else
 #  define FALLTHROUGH __attribute__ ((__fallthrough__))
